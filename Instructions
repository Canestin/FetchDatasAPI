Voilà
Si vous voulez d'autre problème n'hésitez pas :

# MiniReddit

Le but de cet exercice est de tester vos compétences frontend avec javascript et HTML.

Vous devez créer un mini site Web reddit avec un code javascript simple.

## Ressources

Aucune configuration de backend n'est nécessaire car vous utiliserez https://jsonplaceholder.typicode.com/ pour obtenir des commentaires sur les publications et des informations sur les utilisateurs.

Vous devez utiliser les éléments suivants :

- un ou plusieurs fichier html, et un ou plusieurs fichier js

- (vous pouvez créer des fichiers CSS mais nous ne le recommandons pas)

Vous êtes autorisé à utiliser les ressources suivantes (mais rien de plus) :

- https://jsonplaceholder.typicode.com/

- jquery (https://jquery.com/download/) mais si vous le souhaitez, vous pouvez également faire le site Web sans (avec juste javascript sans utiliser jquery), ceci est facultatif

- bootstrap (https://getbootstrap.com/), également facultatif

## Des instructions

Dans quelques heures, il n'y aura peut-être pas assez de temps pour terminer cela, faites ce que vous pouvez.

Vous serez "noté" en tenant compte de la clarté de votre code, de la façon dont vous l'avez structuré.

### Niveau 0 - Débutant

À ce niveau, vous devez avoir un site fonctionnel avec une barre de titre contenant un lien Accueil (cette barre ne doit masquer aucun élément du site Web).

La page principale (Accueil) doit afficher les posts itres des 10 premiers messages et les informations de base des utilisateurs (nom d'utilisateur).

Les articles répertoriés dans la page d'accueil doivent être cliquables et conduire à l'affichage d'informations détaillées (telles que le titre, le contenu).

Vous n'êtes pas invité à fournir des modifications d'URL, mais si vous le faites, ce serait formidable.

### Niveau 1 - Pagination

La page d'accueil devrait maintenant avoir une pagination pour 100 articles (jsonplaceholder nous donne 100 articles), nous devrions pouvoir définir le nombre d'articles affichés avec une entrée variée (entre 5 et 20), le changement devrait s'appliquer instantanément.

Les détails des messages doivent inclure des commentaires connexes.

### Niveau 2 - Impressionnez-nous

Les commentaires et les publications doivent également afficher la photo des auteurs...
**Remarque :** la ressource https://jsonplaceholder.typicode.com/ ne fournit aucune donnée liée pour l'image des auteurs, mais vous pouvez utiliser certaines des données du point de terminaison /photos qui fournissent des liens pour les images (vous peut les obtenir à partir d'une requête dans l'application du site Web ou les coder en dur pour les 10 utilisateurs disponibles dans les données). Conservez simplement les mêmes images/liens pour le même utilisateur, mais vous pouvez également utiliser n'importe quelle image/lien, il n'y a pas de données liées pour obtenir une image d'auteur.

Ajoutez une barre de recherche (dans la barre de titre) afin de rechercher des sujets par titre ou par auteur.

Vous pouvez également essayer d'"optimiser" le nombre de requêtes (et aussi si besoin le code) en fonction de la façon dont vous écrivez le code à ce sujet.

Vous pouvez utiliser librement les ressources suivantes :

/messages 100 messages

/commentaires 500 commentaires

/albums 100 albums

/photos 5000 photos

/todos 200 todos

/utilisateurs 10 utilisateurs

---

                                                        ENGLISH

---

Voilà
Si vous vouez d'autre problème n'hésitez pas:

# MiniReddit

The goal of this exercise is to test your frontend skills with javascript and HTML.

You should build a mini reddit website with simple javascript code.

## Ressources

No backend setup is needed as you will use https://jsonplaceholder.typicode.com/ to obtain posts comments and user informations.

You should use the following :

- one or more html file, and one or more js file

- (you can make css files but we wouldn't recommend to)

You are allowed to use the following ressources (but nothing more) :

- https://jsonplaceholder.typicode.com/

- jquery (https://jquery.com/download/) but if you want you can also do the website without (with just javascript without using jquery), this is optional

- bootstrap (https://getbootstrap.com/), also optional

## Instructions

In a few hours there might not be enough time to finish this, do what you can.

You will be "graded" considering the clarity of your code, the way you structured it.

### Level 0 - Starter

In this level you must have a working site with a title bar containing a Home link (this bar should not hide any website elements).

The main page (Home) should display the first 10 posts titles and users basic infos (username).

The posts listed in the Home page should be clickable and lead to the display of detailed informations (such as title, content).

You are not asked to provide any url changes but if you do it would be great.

### Level 1 - Pagination

The home page should now have pagination for 100 posts (jsonplaceholder gives us 100 posts), we should be able to set the number of posts being displayed with a ranged input (between 5 and 20), the change should apply instantly.

The posts details should include related comments.

### Level 2 - Impress us

Comments and posts should display authors picture as well...
**Note:** the ressource https://jsonplaceholder.typicode.com/ doesn't provide any linked data for authors picture, but you can use some of the data from the endpoint /photos that provide some links for images (you can get them from a request in the app of the website or hardcoded them for all the 10 users available in the data). Just keep the same images/link for the same user, but you can use any images/link as well there is no linked data to get an authors picture.

Add a searchbar (in the title bar) in order to search for topics by title or by author.

You can also try to "optimise" the number of request (and also if needed the code) depanding of how you write the code about it.

You can freely make use of the following ressources :

/posts 100 posts

/comments 500 comments

/albums 100 albums

/photos 5000 photos

/todos 200 todos

/users 10 users
